apiVersion: kiali.io/v1alpha1
kind: Kiali
metadata:
  namespace: <mesh-name>-istio-system
  name: kiali
spec:
  auth:
    strategy: "token"  # Using login strategy
  deployment:
    accessible_namespaces:
      - <mesh-name>-istio-system  # Kiali will monitor only the istio-system namespace
      <mesh-namespace>
    service_type: LoadBalancer  # Use LoadBalancer service type for Kiali
    service_annotations:  # Add annotations to the Kiali service
      kubernetes.io/elb.class: union
      kubernetes.io/elb.autocreate: '{
          "type":"public",
          "bandwidth_name":"test-kiali",
          "bandwidth_size":5,
          "bandwidth_sharetype":"PER",
          "eip_type":"5_bgp"
        }'
  server:
    web_root: "/kiali"  # The root path where Kiali will be accessible
  external_services:
    grafana:
      url: "http://grafana-oss.monitoring.svc.cluster.local:3000"
      auth:
        type: none
    istio:
      url_service_version: "http://istiod-<mesh-name>.istio-system.svc:15014/version"
      components:
        pilot:
          namespace: <mesh-name>-istio-system  # Ensure Kiali integrates with istiod in the same namespace
    prometheus:
      url: "http://prometheus-operated.monitoring.svc:9090"  # Prometheus URL in the monitoring namespace
    tracing:
      enabled: true
      namespace: <mesh-name>-istio-system
      url: "http://tracing.<mesh-name>-istio-system.svc.cluster.local:80"
      service: tracing
      auth:
        type: none
  istio_namespace: "<mesh-name>-istio-system"  # Specifies the namespace where Istio is installed
